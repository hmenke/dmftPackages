name: "cache"
on:
  push:
  pull_request:
  schedule:
  - cron: "0 0 * * *"

jobs:
  nix-build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: locked (Linux)
          os: ubuntu-latest
        - name: nixos-21.05 (Linux)
          channel: nixos-21.05
          os: ubuntu-latest
        - name: nixpkgs-unstable (Linux)
          channel: nixpkgs-unstable
          os: ubuntu-latest
        - name: nixpkgs-unstable (macOS)
          channel: nixpkgs-unstable
          os: macos-latest
    name: nix-build
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Setup SSH key"
      run: |
        mkdir -p -m 0700 ~/.ssh
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        echo "IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
        echo "UserKnownHostsFile /dev/null" >> ~/.ssh/config
        printenv SSH_KEY >> ~/.ssh/id_ed25519
        chmod 0600 ~/.ssh/id_ed25519
      env:
        SSH_KEY: '${{ secrets.SSH_KEY }}'
    - uses: cachix/install-nix-action@v14.1
    - uses: cachix/cachix-action@v10
      with:
        name: hmenke
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        pushFilter: "(-source$|nixpkgs.tar.gz$)"
    - name: Run nix-build
      run: |
        rev="$(git ls-remote https://github.com/NixOS/nixpkgs refs/heads/$channel | awk '{print $1}')"
        nixpkgs="fetchTarball \"https://github.com/NixOS/nixpkgs/archive/$rev.tar.gz\""
        nix-build \
            --show-trace \
            --option allow-import-from-derivation false \
            ${channel:+--arg pkgs "import ($nixpkgs) {}"}
      env:
        channel: '${{ matrix.channel }}'
  nix-flakes:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: locked (Linux)
          os: ubuntu-latest
        - name: nixos-21.05 (Linux)
          channel: nixos-21.05
          os: ubuntu-latest
        - name: nixpkgs-unstable (Linux)
          channel: nixpkgs-unstable
          os: ubuntu-latest
        - name: nixpkgs-unstable (macOS)
          channel: nixpkgs-unstable
          os: macos-latest
    name: nix flake check
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Setup SSH key"
      run: |
        mkdir -p -m 0700 ~/.ssh
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        echo "IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
        echo "UserKnownHostsFile /dev/null" >> ~/.ssh/config
        printenv SSH_KEY >> ~/.ssh/id_ed25519
        chmod 0600 ~/.ssh/id_ed25519
      env:
        SSH_KEY: '${{ secrets.SSH_KEY }}'
    - uses: cachix/install-nix-action@v14.1
      with:
        install_url: https://releases.nixos.org/nix/nix-2.4pre-rc1/install
        extra_nix_config: |
          experimental-features = nix-command flakes
    - uses: cachix/cachix-action@v10
      with:
        name: hmenke
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        pushFilter: "(-source$|nixpkgs.tar.gz$)"
    - name: Run nix flake check
      run: |
        nix flake check \
            --print-build-logs \
            --show-trace \
            --option allow-import-from-derivation false \
            --option pure-eval true \
            ${channel:+--override-input nixpkgs github:NixOS/nixpkgs/$channel}
        nix flake archive --json ${channel:+--override-input nixpkgs github:NixOS/nixpkgs/$channel} |
            jq -r '.inputs[].path' |
            xargs nix-store --delete
      env:
        channel: '${{ matrix.channel }}'
